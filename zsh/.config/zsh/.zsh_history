ls -l /usr/local/Cellar/qt/6.5.2/bin
qt -v
ls Library/Application\ Support/pypoetry
ls -a Library/Application\ Support/pypoetry
pipx
ls .local/bin
ls -l .local/bin
ls -l .local/pipx/venvs
ls -l .local/pipx/venvs/poetry/bin/
brew info qt@5
qmake -query
brew info qt
brew info pip3
brew info pip
ls Applications/n/bin
poetry -v
poetry -V
pipx list
npm -help
npm version
npm view
npm completion
npm ls
npm help ls
npm ls promzard
npm ls bash-handbook
npm help view
npm view javascripting
npm install -g pnpm
which pnpm
pnpm i
brew list service
brew list serve
brew list help
brew help list
brew info mongodb
brew info mongosh
brew list tap
brew help tap
brew tap
brew info mongodb/brew
brew list
mv dev/freeCodeCamp learn/
cd learn
cd dev/freeCodeCamp
pnpm -v
node -v
xcodebuild -showsdks
cd learn/freeCodeCamp
pnpm install && pnpm run create:shared
tldr ln
ls 
s -l
ln -s ./MacOSX13.3.sdk .MacOSX13.sdk
mv .MacOSX13.sdk MacOSX13.sdk
ln -s /MacOSX13.3.sdk MacOSX13.sdk
rm MacOSX13.sdk
ln -s MacOSX13.3.sdk MacOSX13.sdk
rm -fr MacOSX13*
npm install -g bug-clinic
npm list
npm -g list
npm help 
npm install
which bug-clinic
npm uninstall -g bug-clinic
brew info qtcreator
brew search qtcreator
brew uninstall --cask qt-creator
brew uninstall qt@6
export CMAKE_PREFIX_PATH="/Users/timotheos/Qt/6.6.0/macos:$(brew --prefix libarchive)"
git pull
ls build
rm -rf build
git checkout v0.7.0
cd ../zeal-0.7.0
mkdir build
cd build
cmake ..
make
brew info qt@6
brew update
brew upgrade
brew install redis
brew services start redis
brew info ruby
brew install ruby-build
brew install rbenv
rbenv init
echo 'eval "$(rbenv init - zsh)"' >> ~/.zshrc
map
alias dev=cd ~/dev
alias dev="cd ~/dev"
alias lrn="cd ~/learn"
alias qt="cd ~/Qt"
qt
n
alias en="cd ~/Applications/n"
help alias
alias help
help builtin
builtin help
bultin alias
builtin alias
man alias
~
ls /usr/local
ls /
ls sbin
ls /sbin
git add remote upstream https://github.com/freeCodeCamp/freeCodeCamp.git
git remote add upstream https://github.com/freeCodeCamp/freeCodeCamp.git
brew upgrade ruby-build
rbenv install 3.2.2 --verbose
rbenv global 3.2.2
gem install rails
gem update --system 3.4.21
npm install --global yarn
cp env.sample .env
find /Applications -name pg_config
rails -v
gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/Versions/16/bin/pg_config
yarn --version
bundle install
yarn install
rails db:create
rails db:environment:set RAILS_ENV=development
rails db:schema:load
source .env
rspec
rails db:seed
$ rails curriculum:update_content
rails curriculum:update_content
gem install foreman
ls docs
which psql
man psql
node seed
pnpm run seed
"/Applications/Postgres.app/Contents/Versions/16/bin/psql" -p5432 "timotheos"
s -al ~/.ssh
mkdir $HOME/.ssh
ssh-keygen -t rsa -b 4096 -C timotheos.allen@gmail.com
ls -al ~/.ssh
psql -U mettav
brew info postgresql
ssh-keygen -t ed25519 -C "timotheos.allen@gmail.com"
cat ~/.ssh/id_ed25519.pub
ssh -T git@github.com
psql
postgres
postgres -help
postgres --help
postgres --config-file /Users/timotheos/Library/Application Support/Postgres/var-16/postgresql.conf
postgres -D /Users/timotheos/Library/Application Support/Postgres/var-16
postgres -D /Users/timotheos/Library/Application Support/Postgres/var-16/
postgres -D "/Users/timotheos/Library/Application Support/Postgres/var-16"
postgres --config-file "/Users/timotheos/Library/Application Support/Postgres/var-16/postgresql.conf"
which postgres
postgres -D ~/Library/Application\ Support/Postgres/var-16
git config --global init.defaultBranch main
git config --global color.ui auto
git config --global pull.rebase false
echo .DS_Store >> ~/.gitignore_global
git config --global core.excludesfile ~/.gitignore_global
ls | grep .gitignore_global
ls ~/.ssh/id_ed25519.pub
git -- version
ls /etc/paths.d
file /etc/paths.d/postgresapp
cat /etc/paths.d/postgresapp
ls /Applications/Postgres.app/Contents/Versions/latest/bin
git diff package.json
vim package.json
brew uninstall evernote-backup
which gulp
npm install --global zeal-user-contrib
git remote add origin git@github.com:mettavi/theodinproject.git
git remote add origin git@github.com:mettavi/coding-interview-university.git
cd Git-it-Mac-x64
cd patchwork
git add remote origin git@github.com:mettavi/patchwork.git
git remote add origin git@github.com:mettavi/patchwork.git
cd hello-world
git remote delete origin
git remote remove origin
git remote add origin git@github.com:mettavi/hello-world.git
git remote set-url upstream git@github.com:TheOdinProject/theodinproject.git
git remote remove upstream
git remote set-url origin git@github.com:freeCodeCamp/freeCodeCamp.git
cd ../Git-it-Mac-x64/hello-world
cd ../patchwork
git remote set-url upstream git@github.com:jlord/patchwork.git
cd ../../theodinproject
cd ../freeCodeCamp
vim .env
cd coding-interview-university
ls extras
open README.md
git remote -v\ 
git remote set-url upstream git@github.com:jwasham/coding-interview-university.git
cd ../theodinproject
en
ls bin
ruby -V
ruby -v
zeal-user-contrib --output-directory /Users/timotheos/Library/Application Support/Zeal/Zeal/docsets 
tldr compinit
tldr zsh
sudo cp Desktop/Saddhavihari /Users/friend
tldr cp
sudo cp -R Desktop/Saddhavihari /Users/friend
mv /Users/friend/Saddhavihari /Users/friend/Desktop
sudo mv /Users/friend/Saddhavihari /Users/friend/Desktop
./Libation
python -v
python -V
/usr/bin/python3 -V
python3 -V
brew python@3.12 info
brew info python@3.12
ls -l /usr/local/Cellar/python@3.11
ls /usr/bin | grep python
brew info cmake
brew info pipx
brew info openssl
brew info libarchive
ls -l /usr/local/bin | grep python
ls -l /usr/local/opt | grep python
ls -l /usr/local/opt/python@3.12/
ls -l /usr/local/opt/python@3.12/libexec
ls -l /usr/local/opt/bin | grep python
ls -l /usr/local/opt
ls -l /usr/local/opt/python/bin
ls -l /usr/local/opt/python@3.11/libexec/bin
ls -l /usr/local/opt/python@3.12/libexec/bin
ls -l /usr/local/opt/libarchive/bin
ls -l /opt/
which python3
brew info python@3.11
which python
ls -l /usr/local/bin/python
ls -l /usr/local/bin/python3
brew info python
tldr dot_clean
zsh --version
pdfseparate -h
pdfdetach -h
pdfdetach -list /Users/timotheos/Library/CloudStorage/OneDrive-Personal/calibre/Alessio\ Damato/LaTeX\ \(1695\)/LaTeX\ -\ Alessio\ Damato.pdf
cd Documents
code -v
source .zprofile
echo $PATH
zeal-user-contrib
brew install powerlevel10k
echo "source $(brew --prefix)/share/powerlevel10k/powerlevel10k.zsh-theme" >>~/.zshrc
diff $TMPDIR/.zshrc.9AOrGRuvv9 ~/.zshrc
curl https://raw.githubusercontent.com/josean-dev/dev-environment-files/main/coolnight.itermcolors --output ~/Downloads/coolnight.itermcolors
brew install zsh-autosuggestions
echo 'source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh' >> .zshrc
google zsh
source .zshrc
brew install antidote
echo 'source /usr/local/opt/antidote/share/antidote/antidote.zsh' >> .zshrc
ls -l /usr/local/opt/ | grep antidote
ls -l /usr/local/opt/antidote/share/
ls -l /usr/local/opt/antidote/
ls -l /usr/local/opt/ | grep antidoteËƒ½
cd Downloads
vimtutor
brew help
wc -help
wc -h
wc --version
wc -V
wc -v
wc help
wc
tldr wc
man wc
which wc
cpan5.30 pwd
echo $VISUAL
ls -la .zfunc
ls -la .zfunc/_poetry
brew install neovim
p10k configure
git --version
cd Documents/
whoami
ls -l Documents
ls -l ~/Documents
ls ./Documents
ls -l
zeal-user-contrib --output-directory /Users/timotheos/Library/Application Support/Zeal/Zeal/docsets
cd Library/Application\ Support/Zeal/Zeal/docsets
mv Regular_Expressions.docset Regex_Cheatseet.docset
cd Regex_Cheatseet.docset
vim meta.json
ls Documents
git clone -n --depth=1 --filter=tree:0 \\
git@github.com:obsidianmd/obsidian-help.git
git sparse-checkout set --no-cone en
echo $FPATH
cat .zshrc
which vim
ls -l | grep .vim
ls -l | grep vim
cat .vim/vimrc
mv .vim/vimrc .vim/.vimrc
vim /etc/ssh/ssh_config
source .vimrc
mv .vimrc .vim/
ls -al | grep .vim
cat .viminfo
mv .vim/.vimrc .vimrc
which curl
vim .vimrc
vim --version | grep vimrc
mv .vim/.vimrc vimrc
mv .vimrc .vim/vimrc
vim .vim/.vimrc
mv .viminfo .vim/viminfo
ls -l .vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
set runtimepath?
set runtimepath
ZDOTDIR=~/.config/zsh
git clone https://github.com/getantidote/zdotdir $ZDOTDIR
ls -al .config/zsh/.git
ls -al .config/zsh/.git/HEAD
ls -al .config/zsh/.git/HEAD/
find . -type f -name README.md
ls -al ~/.config/zsh/.github
which sed
tldr sed
brew help update
brew help upgrade
brew help home
ls -al .vim/plugged
ls -al .vim/autoload
ls | grep vim
ls | grep .vim
mkdir .vim/backup
ls .vim
mkdir .vim/colors
env
cd .vim/colors
curl -o molokai.vim https://raw.githubusercontent.com/tomasr/molokai/master/colors/molokai.vim
ls .config/zsh/custom
ls .config/zsh/custom/plugins
ls .config/zsh/custom/plugins/example
ls .config/zsh/functions
find . -type f -name .zsh_plugins.txt
zsh
open /Applications/Postgres.app
foreman start
echo $HISTSIZE
echo $SAVEHIST
vim .zprofile
ls .kodi
rm -rf .kodi
vim .vim/viminfo
ls -a .vim/
vim .viminfo
cat .zprofile
vim .zshrc
ls -al .cache
ls -al .cache/p10k-timotheos
ls -a .local
cat .p10k.zsh| less
vim .p10k.zsh
cat .zsh_history
cat .zsh_plugins.txt
cat .zsh_plugins.zsh
tldr diff
diff .zshrc .config/zsh/.zshrc
tldr export
ls /usr/local/share/zsh
ls /usr/local/share/zsh/site-functions
mv nltk_data /usr/local/share/
ls /usr/local/share/nltk_data
python3
cat .config/zsh/.zshrc
ls zsh
ls -a zsh
mv zsh zdotdir
cd zdotdir
cat .zshenv
pip list
which pip
brew search pip
python3 -m pip --version
python3 --version
ls /usr/local/Cellar
pip3 list
python3.11 -m pip install --upgrade pip
ls /usr/local/share
rm -rf /usr/local/share/nltk_data
ls /usr/local/share | grep nltk_data
cd karabiner
cd assets
cd complex_modifications
vim custom-capslock.json
vim .zshen
vim .zshenv
vim $ZDOTDIR/.zshenv
vim $ZDOTDIR/.zshr
echo $HISTFILE
echo $HOME
ls -al $ZDOTDIR
echo $zdotdir
ls -al $ZDOTDIR/.zfunc
alias lrn
ls -al | grep .
ls -al | grep //.
ls -al | grep /.
ls -al | grep \\.
cd ~/.config/karabiner/assets/complex_modifications/
cat custom-capslock.json
antidote load ${ZDOTDIR:-$HOME}/.zsh_plugins.txt
ls $ZDOTDIR
vim $ZDOTDIR/.zshrc
cat $ZDOTDIR/.zsh_plugins.zsh
mv $ZDOTDIR/.zsh_plugins.zsh ~
mv .zsh_plugins.zsh $ZDOTDIR/
ls -a $ZDOTDIR
mkdir .dotfiles
mkdir zsh
cat .config/zsh/.zprofile
tldr test
file .p10k.zsh
ls etc/
ls /etc | grep zsh
ls -al /etc | grep zsh
cd /etc
cat /etc/zshrc
ls -la | grep zsh
man zshoptions
cd ~
history
cd .config
brew install stow
brew --version
brew update && brew upgrade && brew cleanup
brew list services
brew --prefix
ls -la /usr/local/opt
brew install fzf
(brew --prefix)/opt/fzf/install
ls -al /usr/local/opt/fzf
ls -al /usr/local/opt/fzf/
$(brew --prefix)/opt/fzf/install
source $ZDOTDIR/.zshrc
brew services list
brew services redis restart
brew services restart redis
source .vim/.vimrc
source .vim/vimrc
fd() {\
  local dir\
  dir=$(find ${1:-.} -path '*/\.*' -prune \\
                  -o -type d -print 2> /dev/null | fzf +m) &&\
  cd "$dir"\
}
ls var/
ls /var/
ls /var/folders/
ls /var/folders/49
ls /var/folders/49/znrtts2j3595bbf6bvbg3w_r0000gp
ls .local/
ls -al .local/
ls -al .local/pipx
ls -al .local/state
ls -al .local/share
ls -al .local/share/karabiner
ls -al .local/share/
brew uninstall python-tk@3.@3.9
brew uninstall python-tk@3.9
brew uninstall gtk+3
brew uninstall atk
brew uninstall python@3.9
brew uninstall python-tk@3.10
brew uninstall python@3.10
ls -al /usr/local/Cellar
ls -al /usr/local | grep python
ls -al /usr/local/bin | grep python
vim `fzf`
vim .fzf.zsh
vim .config/zsh/.zprofile
cd plugged
cd autoload
vim plug.vim
echo red\ngreen\nblue
echo 'red\ngreen\nblue'
echo 'red\ngreen\nblue' | fzf
printenv
alias
Â¸
fzf -help
tldr command
vim $(fzf)
cd Saddhavihari
find . -type d | fzf
tldr fzf
which zsh
command -v zsh
echo $0
echo $SHELL
cat **
cat**
fzf /usr/local
loc
cd opt/antidote
fzf | cat {}
fzf | cat {$}
fzf | cat "{$}"
fzf | cat {0}
cat /usr/local/**
cat /usr/local/*
ls /usr/local/opt/antidote
cat /usr/local/opt/antidote/share/antidote/antidote.zsh
ls .config/zsh
ls .config/zsh/
ls -a .config/zs
ls -a .config/zsh
tldr tee
nvim --version
ls /usr/local/Cellar/neovim/0.9.4/share/nvim
ls /usr/local/Cellar/neovim/0.9.4/share/nvim/
ls /usr/local/Cellar/neovim/0.9.4/share/nvim/runtime
find . -type d -name sysinit.vim
find . -type f -name sysinit.vim
cd .config/
find -type d | fzf --preview 'cd{}'
find . -type d | fzf --preview 'cd{}'
find . -type d | fzf | cd
find . -type d | fzf | cd {}
find . -type d | fzf | cd '{}'
cd $(find . -type d | fzf)
cd $(find -type d | fzf --preview 'cat {}')
cd $(find . -type d | fzf --preview 'cat {}')
brew install bat
which openssl
fzf -v
fzf --version
bat .config/zsh/.zshrc
cd Desktop
cd .vim/
cd Documents/Vaults/IT\ Knowledge\ Base/+
bat Vim\ cheatsheet.md
brew install the_silver_searcher
$ brew install ripgrep
brew install ripgrep
brew install tree
tree
ag
brew uninstall the_silver_searcher
brew autoremove
brew cleanup
rg --help
rg --help | less
dev
cd zeal
bat .gitignore
rg --help | git
rg --help | grep git
vim ~/.config/zsh/.zsh_aliases
source .config/zsh/.zshrc
fzp
kill -9
fzf --preview 'bat --color "always" { }'
fzf --preview 'bat --color "always" {}'
vim **
vim $(fzf --multi)
fzf -h
man fzf
man fzf | grep --inline-info
man fzf | grep "--inline-info"
man fzf | grep \--inline-info
man fzf | grep inline-info
man fzf | grep print0
man fzf | rg print0
vim vim .config/zsh/.zshrc
cd theodinproject
exec $SHELL
tldr less
bat /etc/hosts
htop
fzf-tmux
builtin cd -- Music
tldr builtin
builtin
ls .vim/
ls .vim/plugged
ls .vim/plugged/fzf
ls .vim/plugged/fzf/plugin
builtin cd -- plugged/fzf
cd plugin
bat fzf.vim
cd /usr/local/opt/fzf
ls share
ls plugin
bat install
ls shell
bat plugin/fzf.vim
diff plugin/fzf.vim ~/.vim/plugged/fzf/plugin/fzf.vim
tldr exec
builtin cd -- Music/Audio\ Music\ Apps/Databases
tree $(fzf)
tree $(find -type d | fzf)
tree $(find --type d | fzf)
cd 
tree $(find * -type d | fzf)
stat OneDrive
tldr stat
fzf --preview 'stat {}'
find . -type d | fzf --preview 'tree{}'
find . -type d | fzf --preview 'tree {}'
tldr rg
man rg
bat .fzf.zsh
cd ../.config/zsh
ls .zfunc/
kill **
kill -9 **
stow -nV -t ~ vim
tldr stow
man stow
stow -nv -t ~ vim
stow --adopt -nv -t ~ vim
stow --adopt -v -t ~ vim
stow -nv -t ~ zsh
stow --adopt -nv -t ~ zsh
stow --adopt -v -t ~ zsh
ls -al .vim
cd ~/.dotfiles
git init
mkdir vim
git remote add origin git@github.com:mettavi/.dotfiles.git
git branch -M main
git push -u origin main
git remote
git branch
git branch -b
git branch -l
cd vim
mkdir .vim && cd .vim
touch vimrc
cd ../..
mkdir -p .config/zsh
touch .zshenv
touch .zshrc
touch .zsh_aliases
touch .zsh_plugins.txt
touch .zprofile
mkdir .zfunc
git add -all
git rm --cached --all
git rm --cached
git rm -r --cached .
brew install fd
echo $fpath
tldr dirname
tldr xargs
fzf
cd $(fzf)
cd $(find -type d | fzf)
cd $(find * -type d | fzf)
tldr nl
vim .zsh_aliases
bindkey -l
tldr bindkey
ls /usr/local/opt/fzf
ls /usr/local/opt/fzf/share
ls /usr/local/opt/fzf/shell
bat /usr/local/opt/fzf/shell/completion.zsh
git commit -m "First commit, starting with vim and zsh"
git push origin main
find -help
find -h
find --help
tldr fd
fd --help
bindkey | rg "backward-kill-line"
bindkey | grep backward-kill-line
bindkey "\Cu"
bindkey "\Cr"
bindkey "\^[r"
bindkey "^[r"
bindkey -L
fc
vim .config/zsh/.zshrc 
bindkey | grep edit-command-line
vim .config/zsh/.zshrc
git commit -m "Add $EDITOR and two bindkeys"
vim .config/zsh/.zshenv
echo $EDITOR
git push --set-upstream origin main
git remote -v
git commit --amend
push --force-with-lease
git push --force-with-lease
bat vim/.vim/vimrc
rm vim/.vim/.vimrc.swp
cd ~/Documents/Vaults/IT\ Knowledge\ Base
cd obsidian-help
cd ..
find . type -f --hidden -name .git
find . --type f --hidden -name .git
find . --hidden -name .git
tldr find
find . -type d -name .git
git clone git@github.com:rothgar/mastering-zsh.git
open xm-man-page://ls
bindkey -e
open x-man-page://ls
vim ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
info emacs
ls -G
echo $CLICOLOR
vim ~/.config/zsh/.zshenv
vim .vim/vimrc
source ~/.vim/vimrc
cd dev/zeal/build
$ MANWIDTH=80 MANPAGER='col -bx' man $@ | open -f
MANWIDTH=80 MANPAGER='col -bx' man $@ | open -f
preman() {\
    mandoc -T pdf "$(/usr/bin/man -w $@)" | open -fa Preview\
}
preman ls
cd u/l
cd /u/l
cd .config/zsh
bat .zsh_plugins.zsh
ls /usr/local/opt/antidote/share
ls /usr/local/opt/antidote/share/antidote
ls /usr/local/opt/antidote/share/antidote/functions
cd .vim
cd /usr/local/opt/antidote/share/antidote/functions
systemctl status sshd
bindkey
echo $VIM
cd Documents/Vaults/IT\ Knowledge\ Base/
cd Docs
git clone -n --depth=1 --filter=tree:0 \\
git@github.com:platers/obsidian-linter.git
cd obsidian-linter
git sparse-checkout set --no-cone docs/docs
git checkout
clear
man -f ip
man -k '^uname'
man -f uname
man less
apropos uname
man info
man man
builtin cd -- zsh

ls /usr/share/vim
ls -la /usr/share/vim
ls -la /usr/share/vim/vim90
echo $VIMRUNTIME
ls -a | rg vim
ls -la | rg vim
rm ~/.vim/viminfo
ls -al ~/.vim/
cd .Trash
ls -a
cp .viminfo .vim/viminfo
ls ~/.vim
ls -al ~/.vim
echo $VIMINIT
ls /usr/share/vim/vim90/ftplugin
bat /usr/share/vim/vim90/plugin/README.txt
ls /usr/share/vim/vim90/syntax
ls -al ~
export XDG_DATA_HOME 
export $XDG_DATA_HOME 
echo $XDG_DATA_HOME
echo $XDG_CONFIG_HOME
bat .dotfiles/zsh/.zshrc
bat .dotfiles/vim/vimrc
ls .dotfiles
ls .dotfiles/vim
ls -al .dotfiles/vim
bat .vim/vimrc
vim ~/.dotfiles/zsh/.zshrc
git restore --staged -all
git restore --staged *
ls /usr/share/vim/vim90/plugin
im
ls .config
echo $ZDOTDIR
cd .dotfiles/zsh
ls -al .config/zsh
ls -al .vim/
rm .viminfo
vim new.js
cd lrn
cd nodeschool.io
cd javascripting
vim arrays.js
cd
cd zsh
ls ~/.config/zsh
ls -al ~/.config/zsh
ls -al ~ | rg .zsh
pwd
ls -al .config/zsh/
rm .zsh_history
ls -al
git add --all
git commit -m "Update and add vim and zsh dotfiles"
git push
git status
vim --version
git clone git@github.com:Phantas0s/mouseless-dev-youtube.git
grep --version
man women
vim +MANPAGER cd
vim
vim ~/.zshenv
man find
man cd
man grep
man zshexpn
lrn
cd freeCodeCamp
os
cd docs
open how-to-setup-freecodecamp-locally.md
pnpm run develop
cd .dotfiles
ls
mkdir git
brew install macos-trash
git config --global --edit
man trash
trash -h
trash
trash -help
man zsh
echo $?
vim ~/.vim/vimrc
exit
trash --help
trasher --help
man trasher
bash
cd .dotfiles/zsh
cd .config/zsh
touch .zsh_functions
cd zsh/.config/zsh
ls -a
ls -al ~/.config/zsh
ls -al
cd ../../..
ls
stow -nv -t ~ zsh
stow --adopt -v -t ~ zsh
vim ~/.config/zsh/.zshrc
vim
echo "add a new line \\nhere"
echo "add a new line \nhere"
myvar='one\ttwo'
echo ${myvar}
echo "${myvar}"
